// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Puskemas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dokter", b =>
                {
                    b.Property<int>("IdDokter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDokter"));

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spesialis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDokter");

                    b.ToTable("Dokters");
                });

            modelBuilder.Entity("Jadwal", b =>
                {
                    b.Property<int>("IdJadwal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdJadwal"));

                    b.Property<string>("Hari")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDokter")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("JamMulai")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("JamSelesai")
                        .HasColumnType("time");

                    b.Property<string>("StatusJadwal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("datetime2");

                    b.HasKey("IdJadwal");

                    b.HasIndex("IdDokter");

                    b.ToTable("Jadwals");
                });

            modelBuilder.Entity("Pasien", b =>
                {
                    b.Property<int>("IdPasien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPasien"));

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorHp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TanggalLahir")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPasien");

                    b.ToTable("Pasiens");
                });

            modelBuilder.Entity("RekamMedis", b =>
                {
                    b.Property<int>("IdRekam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRekam"));

                    b.Property<string>("Diagnosa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPasien")
                        .HasColumnType("int");

                    b.Property<string>("Obat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pengobatan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TanggalCheckup")
                        .HasColumnType("datetime2");

                    b.HasKey("IdRekam");

                    b.HasIndex("IdPasien");

                    b.ToTable("RekamMedis");
                });

            modelBuilder.Entity("Reservasi", b =>
                {
                    b.Property<int>("IdReservasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservasi"));

                    b.Property<int>("IdJadwal")
                        .HasColumnType("int");

                    b.Property<int>("IdPasien")
                        .HasColumnType("int");

                    b.Property<string>("StatusReservasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdReservasi");

                    b.HasIndex("IdJadwal")
                        .IsUnique();

                    b.HasIndex("IdPasien");

                    b.ToTable("Reservasis");
                });

            modelBuilder.Entity("Jadwal", b =>
                {
                    b.HasOne("Dokter", "Dokter")
                        .WithMany("Jadwals")
                        .HasForeignKey("IdDokter")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dokter");
                });

            modelBuilder.Entity("RekamMedis", b =>
                {
                    b.HasOne("Pasien", "Pasien")
                        .WithMany("RekamMedis")
                        .HasForeignKey("IdPasien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pasien");
                });

            modelBuilder.Entity("Reservasi", b =>
                {
                    b.HasOne("Jadwal", "Jadwal")
                        .WithOne("Reservasi")
                        .HasForeignKey("Reservasi", "IdJadwal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pasien", "Pasien")
                        .WithMany("Reservasis")
                        .HasForeignKey("IdPasien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Jadwal");

                    b.Navigation("Pasien");
                });

            modelBuilder.Entity("Dokter", b =>
                {
                    b.Navigation("Jadwals");
                });

            modelBuilder.Entity("Jadwal", b =>
                {
                    b.Navigation("Reservasi")
                        .IsRequired();
                });

            modelBuilder.Entity("Pasien", b =>
                {
                    b.Navigation("RekamMedis");

                    b.Navigation("Reservasis");
                });
#pragma warning restore 612, 618
        }
    }
}
